#--------------------------------------------------------------
# Different Digest Tests
# Try and add a sha256 checksum to a file
exec integrity -v -a --digest=sha256 data.dat
stdout '^data.dat : sha256 : a948904f2f0f479b8f8197694b30184b0d2ed1c1cd2a1ec0fb85d299a192a447 : added$'

 # Verify the sum created
exec integrity -v --digest=sha256 data.dat
stdout '^data.dat : sha256 : a948904f2f0f479b8f8197694b30184b0d2ed1c1cd2a1ec0fb85d299a192a447 : PASSED$'

# add an ohash checksum
exec integrity -a --digest=oshash data.dat
stdout '^data.dat : oshash : added$'

# add a blake2b_256 checksum
exec integrity -a --digest=blake2b_256 data.dat
stdout '^data.dat : blake2b_256 : added$'

# check the blake2b_256 checksum
exec integrity -v --digest=blake2b_256 data.dat
stdout '^data.dat : blake2b_256 : c71b05fd1d1c7bf7e928ff18e58db5193e9316416cc26ba9cc9094da80d7011e : PASSED$'

# add an none checksum, output error
! exec integrity -a --digest=none data.dat
stderr 'Error : unknown digest type ''none'''

# try to add to non-existing file
! exec integrity -a missing.dat
stderr -count=1 'missing.dat : no such file or directory'

# Try to recurse into a non-existing dir
! exec integrity -a -r mydir
stderr 'mydir : no such file or directory'

# Try to recurse into a dir without recurse
exec mkdir mydir
exec integrity -a mydir
! stdout .

# Try to recurse into a dir without recurse - verbose
exec integrity -v -a mydir
stdout 'mydir : skipping directory'

# Try to recurse into a dir with no files
exec integrity -r -a mydir

# Try to traverse a path that is not readable - ToDo: test version outputs no stdout?
exec chmod 000 mypath/mypath2
exec integrity -v -a -r mypath
cmp stdout check_path.verbose.stdout
cmp stderr check_path.verbose.stderr

# Try and traverse a path tht is not readable - normal
exec integrity -a -r mypath
cmp stdout check_path.normal.stdout
cmp stderr check_path.normal.stderr

# Try to add a checksum to a symlink
exec ln -s data3.dat symlink.dat
exec integrity -a -v symlink.dat
stdout '^symlink.dat : sha1 : 700f6a62793f57adfc777ee9ffd3076aae5a537d : added$'

# Check if we have updated the original
exec integrity -l -v data3.dat
stdout '^data3.dat : sha1 : 700f6a62793f57adfc777ee9ffd3076aae5a537d$'

# Try to add a checksum to a file of size 0
exec touch data0.dat
exec integrity -a -v data0.dat
stdout '^data0.dat : sha1 : da39a3ee5e6b4b0d3255bfef95601890afd80709 : added$'

# Output the progress of checking the file
exec integrity -a -vfp data.dat
stdout '^data.dat : read : 100%\ndata.dat : sha1 : 22596363b3de40b06f981fb85d82312e8c0ed511 : added$'

# Disabled test, when running automated tests unable to set env
# Set the digest through the Environment
# exec INTEGRITY_DIGEST=blake2b_256 integrity -a data2.dat
# stdout 'data2.dat : blake2b_256 : added'

# Disabled test, when running automated tests no binary exists
# Code is run with inputs
# Try and add a checksum using a symlinked binary
#exec integrity.sha1 -a data2.dat"
#stdout 'data2.dat : sha1 : added'

# add an phash checksum on non-image file
exec integrity -a --digest=phash data.dat
stderr -count=1 '^data.dat : phash : FAILED$'

# add an phash checksum on non-image file - verbose
exec integrity -v -a --digest=phash data.dat
stderr -count=1 '^data.dat : phash : FAILED : Error adding checksum : image: unknown format$'

# add an phash checksum on an image file - verbose
exec integrity -v -a --digest=phash _MG_5859.JPG
stdout -count=1 '^_MG_5859.JPG : phash : 8000000000000000 : added$'

# add an phash checksum on an image file that already has a checksum
exec integrity -a --digest=phash _MG_5859.JPG
stdout -count=1 '^_MG_5859.JPG : phash : skipped$'

# add an phash checksum on an image file type heic - verbose ToDo: Should this return an error?
exec integrity -v -a --digest=phash _MG_5860.heic
stderr -count=1 '^_MG_5860.heic : phash : FAILED : Error adding checksum : image: unknown format$'

# add an phash checksum on an image file type png
exec integrity -v -a --digest=phash _MG_5861.png
stdout -count=1 '^_MG_5861.png : phash : 8000000000000000 : added$'

# add an phash checksum on an image file type png
exec integrity -v -a --digest=phash _MG_5862.tiff
stdout -count=1 '^_MG_5862.tiff : phash : 8000000000000000 : added$'


-- data.dat --
hello world
-- data2.dat --
hello world!!
-- data3.dat --
hello world! Symlinked
-- check_missing_checksum_sha1_verbose.txt --
data.dat : sha1 : No checksum, skipped
-- check_missing_checksum_sha1_quiet.txt --
-- check_missing_checksum_sha1.txt --
data.dat : No checksum
-- add_existing_checksum_sha1_verbose.txt --
data.dat : sha1 : We already have a checksum stored, skipped
-- add_existing_checksum_sha1_quiet.txt --
-- add_existing_checksum_sha1.txt --
data.dat : sha1 : skipped
-- check_path.verbose.stdout --
mypath/a_myfile : sha1 : 7fe70820e08a1aac0ef224d9c66ab66831cc4ab1 : added
mypath/x_myfile : sha1 : 7fe70820e08a1aac0ef224d9c66ab66831cc4ab1 : added
-- check_path.normal.stdout --
mypath/a_myfile : sha1 : skipped
mypath/x_myfile : sha1 : skipped
-- mypath/a_myfile --
content
-- mypath/x_myfile --
content
-- mypath/mypath2/myfile --
content
-- check_path.verbose.stderr --
mypath/mypath2 : skipped : open mypath/mypath2: permission denied
-- check_path.normal.stderr --
mypath/mypath2 : skipped